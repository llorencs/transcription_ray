FROM nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04

USER root
WORKDIR /app

# Install Python 3.12 and system dependencies
RUN apt-get update && apt-get install -y \
    python3.12 \
    python3.12-dev \
    python3.12-venv \
    python3-pip \
    ffmpeg \
    libsndfile1 \
    libsndfile1-dev \
    build-essential \
    pkg-config \
    git \
    wget \
    curl \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.12 as default and create virtual environment
RUN ln -sf /usr/bin/python3.12 /usr/bin/python3 && \
    ln -sf /usr/bin/python3.12 /usr/bin/python && \
    python3 -m venv /opt/venv

# Activate virtual environment and upgrade pip
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir --upgrade pip==24.0 setuptools wheel

# Copy requirements file
COPY requirements.ray.txt .

# Install PyTorch with CUDA 12.4 support (compatible with CUDA 12.8)
RUN pip install --no-cache-dir torch==2.5.1 torchaudio==2.5.1 torchvision==0.20.1 --extra-index-url https://download.pytorch.org/whl/cu124

# Install Ray
RUN pip install --no-cache-dir ray[default]==2.49.0 ray[serve]==2.49.0

# Install transformers ecosystem - let pip resolve versions automatically
RUN pip install --no-cache-dir transformers accelerate sentencepiece

# Install ML and audio processing libraries
RUN pip install --no-cache-dir \
    faster-whisper==1.1.0 \
    librosa==0.10.2 \
    soundfile==0.12.1 \
    pydub==0.25.1 \
    audioread==3.0.1

# Install scientific computing
RUN pip install --no-cache-dir \
    numpy==2.1.3 \
    scipy==1.14.1

# Install database and utilities
RUN pip install --no-cache-dir \
    pymongo==4.14.1 \
    motor==3.7.1 \
    redis==5.2.0 \
    protobuf==5.28.3 \
    typing-extensions==4.12.2 \
    pyyaml==6.0.2 \
    requests==2.32.3 \
    httpx==0.28.1

# Install pyannote.audio for diarization (optional, may fail without HF token)
RUN pip install --no-cache-dir pyannote.audio==3.3.2 || echo "Warning: pyannote.audio installation failed (needs HF token)"

# Install development tools
RUN pip install --no-cache-dir ipython==8.29.0

# Copy application code
COPY ./src /app/src
COPY ./config /app/config
COPY ./scripts /app/scripts

# Create directories
RUN mkdir -p /app/temp /app/models /app/logs

# Create ray user
RUN useradd -m -s /bin/bash ray || echo "User ray already exists"
RUN chown -R ray:ray /app /opt/venv

# Set environment variables
ENV PYTHONPATH=/app:/app/src
ENV PYTHONUNBUFFERED=1
ENV RAY_DISABLE_IMPORT_WARNING=1
ENV CUDA_HOME=/usr/local/cuda
ENV PATH="/opt/venv/bin:/usr/local/cuda/bin:$PATH"
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"

# Switch to ray user
USER ray

# Expose ports
EXPOSE 6379 8265 10001 8000

# Default command
CMD ["bash"]